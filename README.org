#+Author: Diana Muñoz @DIANAIMC, Mariano Alcaraz @MarianoAlcarazAguilar, Sebastián Murillo @S-murilloG
# SpotifyAPI_tests
Proyecto Final: Bases de Datos No Relacionales

* Introducción
  Este es el repositorio con el contenido del proyecto final para la clase de Bases de Datos No Relacionales de la Licenciatura en Ciencia de Datos del ITAM. 
  
* Objetivo
  Buscar alguna API que llame la atención al equipo, con esta API, conectarla através de python con una base de datos MongoDB. Posteriormente, hacer un ETL que cargue la base de datos procesada a una base de datos columnar y a una base de datos estilo grafo; evidentemente las transformaciones y los subconjuntos de datos ocupados serán diferentes para cada base de datos ya que tienen fines diferentes cada una.

* Desarrollo
  A continuación explicaremos detalladamente el código por partes. Si se desea correr todo el proyecto, ejecute los siguientes comandos:

#+begin_src shell
./requirements.txt
./main.sh
#+end_src

Una vez, ejecutado, ya estarán extraídos e insertados todos los datos tanto en Mongo, Monet y Neo4j

* API
  Nosotros elegimos la API de Spotify ya que nos parecía divertida (spoiler al final ya ni fue tan divertido) por lo que extrajimos 3 objetos que nos parecieron interesantes para analizar posteriormente, los cuales al extraerlos de la API se ven de la siguiente forma:
*** Artist:
  #+begin_src js
  {
  "artists": {
    "href": "https://api.spotify.com/v1/search?query=2022&type=artist&locale=es-ES%2Ces%3Bq%3D0.9&offset=0&limit=1",
    "items": [
      {
        "external_urls": {
          "spotify": "https://open.spotify.com/artist/4nKf2r4jBRR6iz4OqjllNs"
        },
        "followers": {
          "href": null,
          "total": 217
        },
        "genres": [],
        "href": "https://api.spotify.com/v1/artists/4nKf2r4jBRR6iz4OqjllNs",
        "id": "4nKf2r4jBRR6iz4OqjllNs",
        "images": [
          {
            "height": 640,
            "url": "https://i.scdn.co/image/ab67616d0000b273563867731ebd689ae6cb46ae",
            "width": 640
          },
          {
            "height": 300,
            "url": "https://i.scdn.co/image/ab67616d00001e02963bdfec6eeb8a749d2114bc",
            "width": 300
          },
          {
            "height": 64,
            "url": "https://i.scdn.co/image/ab67616d00004851963bdfec6eeb8a749d2114bc",
            "width": 64
          }
        ],
        "name": "2022 Studio Cast of Bliss",
        "popularity": 27,
        "type": "artist",
        "uri": "spotify:artist:4nKf2r4jBRR6iz4OqjllNs"
      }
    ],
    "limit": 1,
    "next": "https://api.spotify.com/v1/search?query=2022&type=artist&locale=es-ES%2Ces%3Bq%3D0.9&offset=1&limit=1",
    "offset": 0,
    "previous": null,
    "total": 297
  }
}
 #+end_src 

*** Album:
  #+begin_src js
  {
  "albums": {
    "href": "https://api.spotify.com/v1/search?query=2022&type=album&locale=es-ES%2Ces%3Bq%3D0.9&offset=0&limit=1",
    "items": [
      {
        "album_type": "single",
        "artists": [
          {
            "external_urls": {
              "spotify": "https://open.spotify.com/artist/6HaGTQPmzraVmaVxvz6EUc"
            },
            "href": "https://api.spotify.com/v1/artists/6HaGTQPmzraVmaVxvz6EUc",
            "id": "6HaGTQPmzraVmaVxvz6EUc",
            "name": "Jung Kook",
            "type": "artist",
            "uri": "spotify:artist:6HaGTQPmzraVmaVxvz6EUc"
          },
          {
            "external_urls": {
              "spotify": "https://open.spotify.com/artist/3Nrfpe0tUJi4K4DXYWgMUX"
            },
            "href": "https://api.spotify.com/v1/artists/3Nrfpe0tUJi4K4DXYWgMUX",
            "id": "3Nrfpe0tUJi4K4DXYWgMUX",
            "name": "BTS",
            "type": "artist",
            "uri": "spotify:artist:3Nrfpe0tUJi4K4DXYWgMUX"
          }
        ],
        "available_markets": [
          "AD",
          "AE",
          "AG",
          "AL",
          "AM",
          ...
        ],
        "external_urls": {
          "spotify": "https://open.spotify.com/album/0gr5OmB74UhoANEXwYT3gE"
        },
        "href": "https://api.spotify.com/v1/albums/0gr5OmB74UhoANEXwYT3gE",
        "id": "0gr5OmB74UhoANEXwYT3gE",
        "images": [
          {
            "height": 640,
            "url": "https://i.scdn.co/image/ab67616d0000b273ef57183066d6cac0cabb85c6",
            "width": 640
          },
          {
            "height": 300,
            "url": "https://i.scdn.co/image/ab67616d00001e02ef57183066d6cac0cabb85c6",
            "width": 300
          },
          {
            "height": 64,
            "url": "https://i.scdn.co/image/ab67616d00004851ef57183066d6cac0cabb85c6",
            "width": 64
          }
        ],
        "name": "Dreamers [Music from the FIFA World Cup Qatar 2022 Official Soundtrack]",
        "release_date": "2022-11-20",
        "release_date_precision": "day",
        "total_tracks": 1,
        "type": "album",
        "uri": "spotify:album:0gr5OmB74UhoANEXwYT3gE"
      }
    ],
    "limit": 1,
    "next": "https://api.spotify.com/v1/search?query=2022&type=album&locale=es-ES%2Ces%3Bq%3D0.9&offset=1&limit=1",
    "offset": 0,
    "previous": null,
    "total": 10002
  }
}
  #+end_src
  
*** Track:
  #+begin_src js
  {
  "tracks": {
    "href": "https://api.spotify.com/v1/search?query=2022&type=track&locale=es-ES%2Ces%3Bq%3D0.9&offset=0&limit=1",
    "items": [
      {
        "album": {
          "album_type": "single",
          "artists": [
            {
              "external_urls": {
                "spotify": "https://open.spotify.com/artist/6HaGTQPmzraVmaVxvz6EUc"
              },
              "href": "https://api.spotify.com/v1/artists/6HaGTQPmzraVmaVxvz6EUc",
              "id": "6HaGTQPmzraVmaVxvz6EUc",
              "name": "Jung Kook",
              "type": "artist",
              "uri": "spotify:artist:6HaGTQPmzraVmaVxvz6EUc"
            },
            {
              "external_urls": {
                "spotify": "https://open.spotify.com/artist/3Nrfpe0tUJi4K4DXYWgMUX"
              },
              "href": "https://api.spotify.com/v1/artists/3Nrfpe0tUJi4K4DXYWgMUX",
              "id": "3Nrfpe0tUJi4K4DXYWgMUX",
              "name": "BTS",
              "type": "artist",
              "uri": "spotify:artist:3Nrfpe0tUJi4K4DXYWgMUX"
            }
          ],
          "available_markets": [
            "AD",
            "AE",
            "AG",
            "AL",
            "AM",
            "AO",
            "AR",
            "AT",
            ...
          ],
          "external_urls": {
            "spotify": "https://open.spotify.com/album/0gr5OmB74UhoANEXwYT3gE"
          },
          "href": "https://api.spotify.com/v1/albums/0gr5OmB74UhoANEXwYT3gE",
          "id": "0gr5OmB74UhoANEXwYT3gE",
          "images": [
            {
              "height": 640,
              "url": "https://i.scdn.co/image/ab67616d0000b273ef57183066d6cac0cabb85c6",
              "width": 640
            },
            {
              "height": 300,
              "url": "https://i.scdn.co/image/ab67616d00001e02ef57183066d6cac0cabb85c6",
              "width": 300
            },
            {
              "height": 64,
              "url": "https://i.scdn.co/image/ab67616d00004851ef57183066d6cac0cabb85c6",
              "width": 64
            }
          ],
          "name": "Dreamers [Music from the FIFA World Cup Qatar 2022 Official Soundtrack]",
          "release_date": "2022-11-20",
          "release_date_precision": "day",
          "total_tracks": 1,
          "type": "album",
          "uri": "spotify:album:0gr5OmB74UhoANEXwYT3gE"
        },
        "artists": [
          {
            "external_urls": {
              "spotify": "https://open.spotify.com/artist/6HaGTQPmzraVmaVxvz6EUc"
            },
            "href": "https://api.spotify.com/v1/artists/6HaGTQPmzraVmaVxvz6EUc",
            "id": "6HaGTQPmzraVmaVxvz6EUc",
            "name": "Jung Kook",
            "type": "artist",
            "uri": "spotify:artist:6HaGTQPmzraVmaVxvz6EUc"
          },
          {
            "external_urls": {
              "spotify": "https://open.spotify.com/artist/3Nrfpe0tUJi4K4DXYWgMUX"
            },
            "href": "https://api.spotify.com/v1/artists/3Nrfpe0tUJi4K4DXYWgMUX",
            "id": "3Nrfpe0tUJi4K4DXYWgMUX",
            "name": "BTS",
            "type": "artist",
            "uri": "spotify:artist:3Nrfpe0tUJi4K4DXYWgMUX"
          },
          {
            "external_urls": {
              "spotify": "https://open.spotify.com/artist/5C01hDqpEmrmDfUhX9YWsH"
            },
            "href": "https://api.spotify.com/v1/artists/5C01hDqpEmrmDfUhX9YWsH",
            "id": "5C01hDqpEmrmDfUhX9YWsH",
            "name": "FIFA Sound",
            "type": "artist",
            "uri": "spotify:artist:5C01hDqpEmrmDfUhX9YWsH"
          }
        ],
        "available_markets": [
          "AD",
          "AE",
          "AG",
          "AL",
          "AM",
          "AO",
          "AR",
          "AT",
          ...
        ],
        "disc_number": 1,
        "duration_ms": 201391,
        "explicit": false,
        "external_ids": {
          "isrc": "QZNMY2232113"
        },
        "external_urls": {
          "spotify": "https://open.spotify.com/track/1RDvyOk4WtPCtoqciJwVn8"
        },
        "href": "https://api.spotify.com/v1/tracks/1RDvyOk4WtPCtoqciJwVn8",
        "id": "1RDvyOk4WtPCtoqciJwVn8",
        "is_local": false,
        "name": "Dreamers [Music from the FIFA World Cup Qatar 2022 Official Soundtrack]",
        "popularity": 91,
        "preview_url": "https://p.scdn.co/mp3-preview/823c1a9c7d369229606c936174b152479fa92e0f?cid=774b29d4f13844c495f206cafdad9c86",
        "track_number": 1,
        "type": "track",
        "uri": "spotify:track:1RDvyOk4WtPCtoqciJwVn8"
      }
    ],
    "limit": 1,
    "next": "https://api.spotify.com/v1/search?query=2022&type=track&locale=es-ES%2Ces%3Bq%3D0.9&offset=1&limit=1",
    "offset": 0,
    "previous": null,
    "total": 10002
  }
}
  #+end_src
  
 En el siguiente escript nos encargamos de extraer 1000 (si es que hay) elementos de "artists", "albums" y "tracks" durante 5 años, en particular, entre el 2018 y el 2022.
 *Para poder extraer los datos tuvimos varias limitantes:*
 1. Spotify solo nos permite extraer como máximo 50 objetos por request: Iterativamente extraemos 50 objetos hasta llegar al número de objetos que realmente deseamos.
2. De igual forma, solo nos permite extraer hasta 1000 elementos en total por query*: Por ello decidimos extraer 1000 elementos por objeto para 5 años distintos (cada año es un query diferente)
3. Para poder hacer el request necesitamos tener una autorización, un token, el cual tienes que generar con un cuenta de Spotify: Generamos credenciales de Spotify a partir de una cuenta de Spotify de un integrante del equipo (para fines del proyecto las credenciales están expuestas, pero una vez que el proyecto sea calificado se removerán). Dichas credenciales nos permiten generar un un token de autenticación por cada ejecución del proyecto.
    
#+begin_src py
import requests
import datetime
import base64
import time

from pymongo import MongoClient
from iteration_utilities import unique_everseen

'''
get_access_token(client_id, client_secret, token_url)
'''
def get_access_token(client_id, client_secret, token_url):
    token_data = {"grant_type": "client_credentials"}
    creds = f"{client_id}:{client_secret}"
    creds_b64 = base64.b64encode(creds.encode())
    token_headers = {"Authorization": f"Basic {creds_b64.decode()}"}

    r = requests.post(token_url, data=token_data, headers=token_headers)
    if r.status_code not in range(200, 299):
        raise Exception("Could not authenticate client.")

    data = r.json()
    now = datetime.datetime.now()
    access_token = data['access_token']
    return access_token

'''
get_data(access_token, lista, limite, year, type)
acces_token: token de acceso a api
lista: lista en la que se desea agregar los datos
limite: offset máximo
year: año del que se desea extraer los datos
type: tipo de dato a extraer (artist, album, track)
'''
def get_data(access_token, lista, limite, year, type):
    offset = 0
    for _ in range(round(limite/50)):
        print('.', end='', flush=True)
        response = requests.get(
         f'https://api.spotify.com/v1/search?q=year%3A{year}&type={type}&limit=50&offset={offset}',
            headers={
                "Authorization": f"Bearer {access_token}",
                'Content-Type': 'application/json'
            }
        )
        json_resp = response.json()
        tipo_aux = f"{type}s"
        if tipo_aux in list(json_resp.keys()):
            current_data = json_resp[tipo_aux]['items']
            lista.extend(current_data)
            offset += 50
        else:
            break
    return lista

client_id = 'af1707ed062448f9aa96ffd1b36737ac'
client_secret = '017e9f625cc149b8b1e11c69bd21ef1d'
token_url = "https://accounts.spotify.com/api/token"

access_token = get_access_token(client_id, client_secret, token_url)

anio_inicio = 2018
anio_fin = 2023

inicio = time.time()

print('Obteniendo artistas…')
artistas = []
for year in range(anio_inicio, anio_fin):
    print(f'\n\tAño {year} ', end='')
    artistas = get_data(access_token, artistas, 1000, year, 'artist')
# Limpiamos los artistas para que no haya repetidos
artistas_final = list(unique_everseen(artistas))
print(f'\nArtistas encontrados previo a limpieza: {len(artistas)}')
print(f'Posterior a limpieza: {len(artistas_final)}')

print('\nObteniendo albums…')
albums = []
for year in range(anio_inicio, anio_fin):
    print(f'\n\tAño {year} ', end='')
    albums = get_data(access_token, albums, 1000, year, 'album')
# Limpiamos los albums para que no haya repetidos
albums_final = list(unique_everseen(albums))
print(f'\nAlbums encontrados previo a limpieza: {len(albums)}')
print(f'Posterior a limpieza: {len(albums_final)}')

print('\nObteniendo tracks…')
tracks = []
for year in range(anio_inicio, anio_fin):
    print(f'\n\tAño {year} ', end='')
    tracks = get_data(access_token, tracks, 1000, year, 'track')
# Limpiamos los tracks para que no haya repetidos
tracks_final = list(unique_everseen(tracks))
print(f'\nTracks encontrados previo a limpieza: {len(tracks)}')
print(f'Posterior a limpieza: {len(tracks_final)}')

fin = time.time()
# print(f"\nEjecución del programa en minutos: {(fin-inicio)/60}")
    #+end_src
    
 
 
* MONGO
* MONET
* NEO4J

